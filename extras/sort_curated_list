#!/usr/bin/env python3

# sorting script for adding new names to curated_list.txt
# has nothing to do with pddcat's functionality

import os

EXTRAS_DIR = os.path.dirname(os.path.realpath(__file__))
CURATED_LIST = os.path.abspath(os.path.join(EXTRAS_DIR, '..', 'db', 'curated_list.txt'))
CUSTOM_LIST = os.path.abspath(os.path.join(EXTRAS_DIR, '..', 'pddcat_files', 'custom_list.txt'))

def sort_list():
	comments = []
	names = []
	add_names = [] # additional names from custom_list.txt
	try:
		temp = list(filter(None, open(CURATED_LIST).read().split('\n')))
		for line in temp:
			if line.startswith('#'):
				comments.append(line)
			else:
				names.append(line)

		temp = list(filter(None, open(CUSTOM_LIST).read().split('\n')))
		for line in temp:
			if line.startswith('#'):
				pass
			else:
				add_names.append(line)
	except Exception as e:
		print(e)

	combined_names = names + add_names

	# remove duplicates & sort alphabetically
	combined_names = list(dict.fromkeys(combined_names))
	combined_names.sort()

	# a crude way to check if new names are added
	if len(combined_names) != len(names):
		# increment revision number
		ver_line = comments[-1].split(' ')
		ver_line[-1] = str(int(ver_line[-1]) + 1)
		comments[-1] = ' '.join(ver_line)

	try:
		with open(CURATED_LIST, 'w') as curated:
			data = comments + combined_names
			curated.write('\n'.join(data) + '\n')
			print('%d new name(s) were added to list.' % (len(combined_names) - len(names)))
	except Exception as e:
		print(e)

if __name__ == '__main__':
	sort_list()
